/*!
* \file asn1_stack.h
* \brief x509 및 PKCS에 관련된 구조체들을 스택의 구조로 다루기 위해 사용되는 헤더
* \remarks
* \author
* Copyright (c) 2008 by \<INITech\>
*/

#ifndef HEADER_ASN1_STACK_H
#define HEADER_ASN1_STACK_H

#ifdef NO_PKI
#error PKI is disabled.
#endif

#ifdef  __cplusplus
extern "C" {
#endif

#include <inicrypto/foundation.h>
#include "stack.h"

#define new_ACCESS_DESCRIPTION_STK() new_STK(ACCESS_DESCRIPTION)
#define free_ACCESS_DESCRIPTION_STK(st) free_STK(ACCESS_DESCRIPTION, (st))
#define get_ACCESS_DESCRIPTION_STK_count(st) get_STK_count(ACCESS_DESCRIPTION, (st))
#define get_ACCESS_DESCRIPTION_STK_value(st, i) get_STK_value(ACCESS_DESCRIPTION, (st), (i))
#define push_ACCESS_DESCRIPTION_STK(st, val) push_STK_value(ACCESS_DESCRIPTION, (st), (val))
#define find_ACCESS_DESCRIPTION_STK(st, val) find_STK_value(ACCESS_DESCRIPTION, (st), (val))
#define remove_ACCESS_DESCRIPTION_STK(st, i) remove_STK_value(ACCESS_DESCRIPTION, (st), (i))
#define insert_ACCESS_DESCRIPTION_STK(st, val, i) insert_STK_value(ACCESS_DESCRIPTION, (st), (val), (i))
#define dup_ACCESS_DESCRIPTION_STK(st) dup_STK(ACCESS_DESCRIPTION, st)
#define free_ACCESS_DESCRIPTION_STK_values(st, free_func) free_STK_values(ACCESS_DESCRIPTION, (st), (free_func))
#define pop_ACCESS_DESCRIPTION_STK(st) pop_STK_value(ACCESS_DESCRIPTION, (st))
#define sort_ACCESS_DESCRIPTION_STK(st) sort_STK(ACCESS_DESCRIPTION, (st))
#define is_ACCESS_DESCRIPTION_STK_sorted(st) is_STK_sorted(ACCESS_DESCRIPTION, (st))

#define new_INTEGER_STK() new_STK(INTEGER)
#define free_INTEGER_STK(st) free_STK(INTEGER, (st))
#define get_INTEGER_STK_count(st) get_STK_count(INTEGER, (st))
#define get_INTEGER_STK_value(st, i) get_STK_value(INTEGER, (st), (i))
#define push_INTEGER_STK(st, val) push_STK_value(INTEGER, (st), (val))
#define find_INTEGER_STK(st, val) find_STK_value(INTEGER, (st), (val))
#define remove_INTEGER_STK(st, i) remove_STK_value(INTEGER, (st), (i))
#define insert_INTEGER_STK(st, val, i) insert_STK_value(INTEGER, (st), (val), (i))
#define dup_INTEGER_STK(st) dup_STK(INTEGER, st)
#define free_INTEGER_STK_values(st, free_func) free_STK_values(INTEGER, (st), (free_func))
#define pop_INTEGER_STK(st) pop_STK_value(INTEGER, (st))
#define sort_INTEGER_STK(st) sort_STK(INTEGER, (st))
#define is_INTEGER_STK_sorted(st) is_STK_sorted(INTEGER, (st))

#define new_OBJECT_IDENTIFIER_STK() new_STK(OBJECT_IDENTIFIER)
#define free_OBJECT_IDENTIFIER_STK(st) free_STK(OBJECT_IDENTIFIER, (st))
#define get_OBJECT_IDENTIFIER_STK_count(st) get_STK_count(OBJECT_IDENTIFIER, (st))
#define get_OBJECT_IDENTIFIER_STK_value(st, i) get_STK_value(OBJECT_IDENTIFIER, (st), (i))
#define push_OBJECT_IDENTIFIER_STK(st, val) push_STK_value(OBJECT_IDENTIFIER, (st), (val))
#define find_OBJECT_IDENTIFIER_STK(st, val) find_STK_value(OBJECT_IDENTIFIER, (st), (val))
#define remove_OBJECT_IDENTIFIER_STK(st, i) remove_STK_value(OBJECT_IDENTIFIER, (st), (i))
#define insert_OBJECT_IDENTIFIER_STK(st, val, i) insert_STK_value(OBJECT_IDENTIFIER, (st), (val), (i))
#define dup_OBJECT_IDENTIFIER_STK(st) dup_STK(OBJECT_IDENTIFIER, st)
#define free_OBJECT_IDENTIFIER_STK_values(st, free_func) free_STK_values(OBJECT_IDENTIFIER, (st), (free_func))
#define pop_OBJECT_IDENTIFIER_STK(st) pop_STK_value(OBJECT_IDENTIFIER, (st))
#define sort_OBJECT_IDENTIFIER_STK(st) sort_STK(OBJECT_IDENTIFIER, (st))
#define is_OBJECT_IDENTIFIER_STK_sorted(st) is_STK_sorted(OBJECT_IDENTIFIER, (st))

#define new_DIST_POINT_STK() new_STK(DIST_POINT)
#define free_DIST_POINT_STK(st) free_STK(DIST_POINT, (st))
#define get_DIST_POINT_STK_count(st) get_STK_count(DIST_POINT, (st))
#define get_DIST_POINT_STK_value(st, i) get_STK_value(DIST_POINT, (st), (i))
#define push_DIST_POINT_STK(st, val) push_STK_value(DIST_POINT, (st), (val))
#define find_DIST_POINT_STK(st, val) find_STK_value(DIST_POINT, (st), (val))
#define remove_DIST_POINT_STK(st, i) remove_STK_value(DIST_POINT, (st), (i))
#define insert_DIST_POINT_STK(st, val, i) insert_STK_value(DIST_POINT, (st), (val), (i))
#define dup_DIST_POINT_STK(st) dup_STK(DIST_POINT, st)
#define free_DIST_POINT_STK_values(st, free_func) free_STK_values(DIST_POINT, (st), (free_func))
#define pop_DIST_POINT_STK(st) pop_STK_value(DIST_POINT, (st))
#define sort_DIST_POINT_STK(st) sort_STK(DIST_POINT, (st))
#define is_DIST_POINT_STK_sorted(st) is_STK_sorted(DIST_POINT, (st))

#define new_ISSUING_DIST_POINT_STK() new_STK(ISSUING_DIST_POINT)
#define free_ISSUING_DIST_POINT_STK(st) free_STK(ISSUING_DIST_POINT, (st))
#define get_ISSUING_DIST_POINT_STK_count(st) get_STK_count(ISSUING_DIST_POINT, (st))
#define get_ISSUING_DIST_POINT_STK_value(st, i) get_STK_value(ISSUING_DIST_POINT, (st), (i))
#define push_ISSUING_DIST_POINT_STK(st, val) push_STK_value(ISSUING_DIST_POINT, (st), (val))
#define find_ISSUING_DIST_POINT_STK(st, val) find_STK_value(ISSUING_DIST_POINT, (st), (val))
#define remove_ISSUING_DIST_POINT_STK(st, i) remove_STK_value(ISSUING_DIST_POINT, (st), (i))
#define insert_ISSUING_DIST_POINT_STK(st, val, i) insert_STK_value(ISSUING_DIST_POINT, (st), (val), (i))
#define dup_ISSUING_DIST_POINT_STK(st) dup_STK(ISSUING_DIST_POINT, st)
#define free_ISSUING_DIST_POINT_STK_values(st, free_func) free_STK_values(ISSUING_DIST_POINT, (st), (free_func))
#define pop_ISSUING_DIST_POINT_STK(st) pop_STK_value(ISSUING_DIST_POINT, (st))
#define sort_ISSUING_DIST_POINT_STK(st) sort_STK(ISSUING_DIST_POINT, (st))
#define is_ISSUING_DIST_POINT_STK_sorted(st) is_STK_sorted(ISSUING_DIST_POINT, (st))

#define new_GENERAL_NAME_STK() new_STK(GENERAL_NAME)
#define free_GENERAL_NAME_STK(st) free_STK(GENERAL_NAME, (st))
#define get_GENERAL_NAME_STK_count(st) get_STK_count(GENERAL_NAME, (st))
#define get_GENERAL_NAME_STK_value(st, i) get_STK_value(GENERAL_NAME, (st), (i))
#define push_GENERAL_NAME_STK(st, val) push_STK_value(GENERAL_NAME, (st), (val))
#define find_GENERAL_NAME_STK(st, val) find_STK_value(GENERAL_NAME, (st), (val))
#define remove_GENERAL_NAME_STK(st, i) remove_STK_value(GENERAL_NAME, (st), (i))
#define insert_GENERAL_NAME_STK(st, val, i) insert_STK_value(GENERAL_NAME, (st), (val), (i))
#define dup_GENERAL_NAME_STK(st) dup_STK(GENERAL_NAME, st)
#define free_GENERAL_NAME_STK_values(st, free_func) free_STK_values(GENERAL_NAME, (st), (free_func))
#define pop_GENERAL_NAME_STK(st) pop_STK_value(GENERAL_NAME, (st))
#define sort_GENERAL_NAME_STK(st) sort_STK(GENERAL_NAME, (st))
#define is_GENERAL_NAME_STK_sorted(st) is_STK_sorted(GENERAL_NAME, (st))

#define new_GENERAL_SUBTREE_STK() new_STK(GENERAL_SUBTREE)
#define free_GENERAL_SUBTREE_STK(st) free_STK(GENERAL_SUBTREE, (st))
#define get_GENERAL_SUBTREE_STK_count(st) get_STK_count(GENERAL_SUBTREE, (st))
#define get_GENERAL_SUBTREE_STK_value(st, i) get_STK_value(GENERAL_SUBTREE, (st), (i))
#define push_GENERAL_SUBTREE_STK(st, val) push_STK_value(GENERAL_SUBTREE, (st), (val))
#define find_GENERAL_SUBTREE_STK(st, val) find_STK_value(GENERAL_SUBTREE, (st), (val))
#define remove_GENERAL_SUBTREE_STK(st, i) remove_STK_value(GENERAL_SUBTREE, (st), (i))
#define insert_GENERAL_SUBTREE_STK(st, val, i) insert_STK_value(GENERAL_SUBTREE, (st), (val), (i))
#define dup_GENERAL_SUBTREE_STK(st) dup_STK(GENERAL_SUBTREE, st)
#define free_GENERAL_SUBTREE_STK_values(st, free_func) free_STK_values(GENERAL_SUBTREE, (st), (free_func))
#define pop_GENERAL_SUBTREE_STK(st) pop_STK_value(GENERAL_SUBTREE, (st))
#define sort_GENERAL_SUBTREE_STK(st) sort_STK(GENERAL_SUBTREE, (st))
#define is_GENERAL_SUBTREE_STK_sorted(st) is_STK_sorted(GENERAL_SUBTREE, (st))

#define new_POLICY_INFO_STK() new_STK(POLICY_INFO)
#define free_POLICY_INFO_STK(st) free_STK(POLICY_INFO, (st))
#define get_POLICY_INFO_STK_count(st) get_STK_count(POLICY_INFO, (st))
#define get_POLICY_INFO_STK_value(st, i) get_STK_value(POLICY_INFO, (st), (i))
#define push_POLICY_INFO_STK(st, val) push_STK_value(POLICY_INFO, (st), (val))
#define find_POLICY_INFO_STK(st, val) find_STK_value(POLICY_INFO, (st), (val))
#define remove_POLICY_INFO_STK(st, i) remove_STK_value(POLICY_INFO, (st), (i))
#define insert_POLICY_INFO_STK(st, val, i) insert_STK_value(POLICY_INFO, (st), (val), (i))
#define dup_POLICY_INFO_STK(st) dup_STK(POLICY_INFO, st)
#define free_POLICY_INFO_STK_values(st, free_func) free_STK_values(POLICY_INFO, (st), (free_func))
#define pop_POLICY_INFO_STK(st) pop_STK_value(POLICY_INFO, (st))
#define sort_POLICY_INFO_STK(st) sort_STK(POLICY_INFO, (st))
#define is_POLICY_INFO_STK_sorted(st) is_STK_sorted(POLICY_INFO, (st))

#define new_POLICY_QUALIFIER_INFO_STK() new_STK(POLICY_QUALIFIER_INFO)
#define free_POLICY_QUALIFIER_INFO_STK(st) free_STK(POLICY_QUALIFIER_INFO, (st))
#define get_POLICY_QUALIFIER_INFO_STK_count(st) get_STK_count(POLICY_QUALIFIER_INFO, (st))
#define get_POLICY_QUALIFIER_INFO_STK_value(st, i) get_STK_value(POLICY_QUALIFIER_INFO, (st), (i))
#define push_POLICY_QUALIFIER_INFO_STK(st, val) push_STK_value(POLICY_QUALIFIER_INFO, (st), (val))
#define find_POLICY_QUALIFIER_INFO_STK(st, val) find_STK_value(POLICY_QUALIFIER_INFO, (st), (val))
#define remove_POLICY_QUALIFIER_INFO_STK(st, i) remove_STK_value(POLICY_QUALIFIER_INFO, (st), (i))
#define insert_POLICY_QUALIFIER_INFO_STK(st, val, i) insert_STK_value(POLICY_QUALIFIER_INFO, (st), (val), (i))
#define dup_POLICY_QUALIFIER_INFO_STK(st) dup_STK(POLICY_QUALIFIER_INFO, st)
#define free_POLICY_QUALIFIER_INFO_STK_values(st, free_func) free_STK_values(POLICY_QUALIFIER_INFO, (st), (free_func))
#define pop_POLICY_QUALIFIER_INFO_STK(st) pop_STK_value(POLICY_QUALIFIER_INFO, (st))
#define sort_POLICY_QUALIFIER_INFO_STK(st) sort_STK(POLICY_QUALIFIER_INFO, (st))
#define is_POLICY_QUALIFIER_INFO_STK_sorted(st) is_STK_sorted(POLICY_QUALIFIER_INFO, (st))

#define new_POLICY_MAPPING_STK() new_STK(POLICY_MAPPING)
#define free_POLICY_MAPPING_STK(st) free_STK(POLICY_MAPPING, (st))
#define get_POLICY_MAPPING_STK_count(st) get_STK_count(POLICY_MAPPING, (st))
#define get_POLICY_MAPPING_STK_value(st, i) get_STK_value(POLICY_MAPPING, (st), (i))
#define push_POLICY_MAPPING_STK(st, val) push_STK_value(POLICY_MAPPING, (st), (val))
#define find_POLICY_MAPPING_STK(st, val) find_STK_value(POLICY_MAPPING, (st), (val))
#define remove_POLICY_MAPPING_STK(st, i) remove_STK_value(POLICY_MAPPING, (st), (i))
#define insert_POLICY_MAPPING_STK(st, val, i) insert_STK_value(POLICY_MAPPING, (st), (val), (i))
#define dup_POLICY_MAPPING_STK(st) dup_STK(POLICY_MAPPING, st)
#define free_POLICY_MAPPING_STK_values(st, free_func) free_STK_values(POLICY_MAPPING, (st), (free_func))
#define pop_POLICY_MAPPING_STK(st) pop_STK_value(POLICY_MAPPING, (st))
#define sort_POLICY_MAPPING_STK(st) sort_STK(POLICY_MAPPING, (st))
#define is_POLICY_MAPPING_STK_sorted(st) is_STK_sorted(POLICY_MAPPING, (st))

#define new_X509_EXTENSION_STK() new_STK(X509_EXTENSION)
#define free_X509_EXTENSION_STK(st) free_STK(X509_EXTENSION, (st))
#define get_X509_EXTENSION_STK_count(st) get_STK_count(X509_EXTENSION, (st))
#define get_X509_EXTENSION_STK_value(st, i) get_STK_value(X509_EXTENSION, (st), (i))
#define push_X509_EXTENSION_STK(st, val) push_STK_value(X509_EXTENSION, (st), (val))
#define find_X509_EXTENSION_STK(st, val) find_STK_value(X509_EXTENSION, (st), (val))
#define remove_X509_EXTENSION_STK(st, i) remove_STK_value(X509_EXTENSION, (st), (i))
#define insert_X509_EXTENSION_STK(st, val, i) insert_STK_value(X509_EXTENSION, (st), (val), (i))
#define dup_X509_EXTENSION_STK(st) dup_STK(X509_EXTENSION, st)
#define free_X509_EXTENSION_STK_values(st, free_func) free_STK_values(X509_EXTENSION, (st), (free_func))
#define pop_X509_EXTENSION_STK(st) pop_STK_value(X509_EXTENSION, (st))
#define sort_X509_EXTENSION_STK(st) sort_STK(X509_EXTENSION, (st))
#define is_X509_EXTENSION_STK_sorted(st) is_STK_sorted(X509_EXTENSION, (st))

#define new_X509_NAME_CHILD_STK() new_STK(X509_NAME_CHILD)
#define free_X509_NAME_CHILD_STK(st) free_STK(X509_NAME_CHILD, (st))
#define get_X509_NAME_CHILD_STK_count(st) get_STK_count(X509_NAME_CHILD, (st))
#define get_X509_NAME_CHILD_STK_value(st, i) get_STK_value(X509_NAME_CHILD, (st), (i))
#define push_X509_NAME_CHILD_STK(st, val) push_STK_value(X509_NAME_CHILD, (st), (val))
#define find_X509_NAME_CHILD_STK(st, val) find_STK_value(X509_NAME_CHILD, (st), (val))
#define remove_X509_NAME_CHILD_STK(st, i) remove_STK_value(X509_NAME_CHILD, (st), (i))
#define insert_X509_NAME_CHILD_STK(st, val, i) insert_STK_value(X509_NAME_CHILD, (st), (val), (i))
#define dup_X509_NAME_CHILD_STK(st) dup_STK(X509_NAME_CHILD, st)
#define free_X509_NAME_CHILD_STK_values(st, free_func) free_STK_values(X509_NAME_CHILD, (st), (free_func))
#define pop_X509_NAME_CHILD_STK(st) pop_STK_value(X509_NAME_CHILD, (st))
#define sort_X509_NAME_CHILD_STK(st) sort_STK(X509_NAME_CHILD, (st))
#define is_X509_NAME_CHILD_STK_sorted(st) is_STK_sorted(X509_NAME_CHILD, (st))

#define new_X509_REVOKED_STK() new_STK(X509_REVOKED)
#define free_X509_REVOKED_STK(st) free_STK(X509_REVOKED, (st))
#define get_X509_REVOKED_STK_count(st) get_STK_count(X509_REVOKED, (st))
#define get_X509_REVOKED_STK_value(st, i) get_STK_value(X509_REVOKED, (st), (i))
#define push_X509_REVOKED_STK(st, val) push_STK_value(X509_REVOKED, (st), (val))
#define find_X509_REVOKED_STK(st, val) find_STK_value(X509_REVOKED, (st), (val))
#define remove_X509_REVOKED_STK(st, i) remove_STK_value(X509_REVOKED, (st), (i))
#define insert_X509_REVOKED_STK(st, val, i) insert_STK_value(X509_REVOKED, (st), (val), (i))
#define dup_X509_REVOKED_STK(st) dup_STK(X509_REVOKED, st)
#define free_X509_REVOKED_STK_values(st, free_func) free_STK_values(X509_REVOKED, (st), (free_func))
#define pop_X509_REVOKED_STK(st) pop_STK_value(X509_REVOKED, (st))
#define sort_X509_REVOKED_STK(st) sort_STK(X509_REVOKED, (st))
#define is_X509_REVOKED_STK_sorted(st) is_STK_sorted(X509_REVOKED, (st))

#define new_ASN1_STRING_STK() new_STK(ASN1_STRING)
#define free_ASN1_STRING_STK(st) free_STK(ASN1_STRING, (st))
#define get_ASN1_STRING_STK_count(st) get_STK_count(ASN1_STRING, (st))
#define get_ASN1_STRING_STK_value(st, i) get_STK_value(ASN1_STRING, (st), (i))
#define push_ASN1_STRING_STK(st, val) push_STK_value(ASN1_STRING, (st), (val))
#define find_ASN1_STRING_STK(st, val) find_STK_value(ASN1_STRING, (st), (val))
#define remove_ASN1_STRING_STK(st, i) remove_STK_value(ASN1_STRING, (st), (i))
#define insert_ASN1_STRING_STK(st, val, i) insert_STK_value(ASN1_STRING, (st), (val), (i))
#define dup_ASN1_STRING_STK(st) dup_STK(ASN1_STRING, st)
#define free_ASN1_STRING_STK_values(st, free_func) free_STK_values(ASN1_STRING, (st), (free_func))
#define pop_ASN1_STRING_STK(st) pop_STK_value(ASN1_STRING, (st))
#define sort_ASN1_STRING_STK(st) sort_STK(ASN1_STRING, (st))
#define is_ASN1_STRING_STK_sorted(st) is_STK_sorted(ASN1_STRING, (st))

#define new_X509_ATTRIBUTE_STK() new_STK(X509_ATTRIBUTE)
#define free_X509_ATTRIBUTE_STK(st) free_STK(X509_ATTRIBUTE, (st))
#define get_X509_ATTRIBUTE_STK_count(st) get_STK_count(X509_ATTRIBUTE, (st))
#define get_X509_ATTRIBUTE_STK_value(st, i) get_STK_value(X509_ATTRIBUTE, (st), (i))
#define push_X509_ATTRIBUTE_STK(st, val) push_STK_value(X509_ATTRIBUTE, (st), (val))
#define find_X509_ATTRIBUTE_STK(st, val) find_STK_value(X509_ATTRIBUTE, (st), (val))
#define remove_X509_ATTRIBUTE_STK(st, i) remove_STK_value(X509_ATTRIBUTE, (st), (i))
#define insert_X509_ATTRIBUTE_STK(st, val, i) insert_STK_value(X509_ATTRIBUTE, (st), (val), (i))
#define dup_X509_ATTRIBUTE_STK(st) dup_STK(X509_ATTRIBUTE, st)
#define free_X509_ATTRIBUTE_STK_values(st, free_func) free_STK_values(X509_ATTRIBUTE, (st), (free_func))
#define pop_X509_ATTRIBUTE_STK(st) pop_STK_value(X509_ATTRIBUTE, (st))
#define sort_X509_ATTRIBUTE_STK(st) sort_STK(X509_ATTRIBUTE, (st))
#define is_X509_ATTRIBUTE_STK_sorted(st) is_STK_sorted(X509_ATTRIBUTE, (st))

#define new_P12_SAFEBAG_STK() new_STK(P12_SAFEBAG)
#define free_P12_SAFEBAG_STK(st) free_STK(P12_SAFEBAG, (st))
#define get_P12_SAFEBAG_STK_count(st) get_STK_count(P12_SAFEBAG, (st))
#define get_P12_SAFEBAG_STK_value(st, i) get_STK_value(P12_SAFEBAG, (st), (i))
#define push_P12_SAFEBAG_STK(st, val) push_STK_value(P12_SAFEBAG, (st), (val))
#define find_P12_SAFEBAG_STK(st, val) find_STK_value(P12_SAFEBAG, (st), (val))
#define remove_P12_SAFEBAG_STK(st, i) remove_STK_value(P12_SAFEBAG, (st), (i))
#define insert_P12_SAFEBAG_STK(st, val, i) insert_STK_value(P12_SAFEBAG, (st), (val), (i))
#define dup_P12_SAFEBAG_STK(st) dup_STK(P12_SAFEBAG, st)
#define free_P12_SAFEBAG_STK_values(st, free_func) free_STK_values(P12_SAFEBAG, (st), (free_func))
#define pop_P12_SAFEBAG_STK(st) pop_STK_value(P12_SAFEBAG, (st))
#define sort_P12_SAFEBAG_STK(st) sort_STK(P12_SAFEBAG, (st))
#define is_P12_SAFEBAG_STK_sorted(st) is_STK_sorted(P12_SAFEBAG, (st))

#define new_X509_CERT_STK() new_STK(X509_CERT)
#define free_X509_CERT_STK(st) free_STK(X509_CERT, (st))
#define get_X509_CERT_STK_count(st) get_STK_count(X509_CERT, (st))
#define get_X509_CERT_STK_value(st, i) get_STK_value(X509_CERT, (st), (i))
#define push_X509_CERT_STK_value(st, val) push_STK_value(X509_CERT, (st), (val))
#define find_X509_CERT_STK_value(st, val) find_STK_value(X509_CERT, (st), (val))
#define remove_X509_CERT_STK_value(st, i) remove_STK_value(X509_CERT, (st), (i))
#define insert_X509_CERT_STK_value(st, val, i) insert_STK_value(X509_CERT, (st), (val), (i))
#define dup_X509_CERT_STK(st) dup_STK(X509_CERT, st)
#define free_X509_CERT_STK_values(st, free_func) free_STK_values(X509_CERT, (st), (free_func))
#define pop_X509_CERT_STK_value(st) pop_STK_value(X509_CERT, (st))
#define sort_X509_CERT(st) sort_STK(X509_CERT, (st))
#define is_X509_CERT_STK_sorted(st) is_STK_sorted(X509_CERT, (st))

#define new_X509_CRL_STK() new_STK(X509_CRL)
#define free_X509_CRL_STK(st) free_STK(X509_CRL, (st))
#define get_X509_CRL_STK_count(st) get_STK_count(X509_CRL, (st))
#define get_X509_CRL_STK_value(st, i) get_STK_value(X509_CRL, (st), (i))
#define push_X509_CRL_STK_value(st, val) push_STK_value(X509_CRL, (st), (val))
#define find_X509_CRL_STK_value(st, val) find_STK_value(X509_CRL, (st), (val))
#define remove_X509_CRL_STK_value(st, i) remove_STK_value(X509_CRL, (st), (i))
#define insert_X509_CRL_STK_value(st, val, i) insert_STK_value(X509_CRL, (st), (val), (i))
#define dup_X509_CRL_STK(st) dup_STK(X509_CRL, st)
#define free_X509_CRL_STK_values(st, free_func) free_STK_values(X509_CRL, (st), (free_func))
#define pop_X509_CRL_STK_value(st) pop_STK_value(X509_CRL, (st))
#define sort_X509_CRL(st) sort_STK(X509_CRL, (st))
#define is_X509_CRL_STK_sorted(st) is_STK_sorted(X509_CRL, (st))

#define new_X509_ALGO_IDENTIFIER_STK() new_STK(X509_ALGO_IDENTIFIER)
#define free_X509_ALGO_IDENTIFIER_STK(st) free_STK(X509_ALGO_IDENTIFIER, (st))
#define get_X509_ALGO_IDENTIFIER_STK_count(st) get_STK_count(X509_ALGO_IDENTIFIER, (st))
#define get_X509_ALGO_IDENTIFIER_STK_value(st, i) get_STK_value(X509_ALGO_IDENTIFIER, (st), (i))
#define push_X509_ALGO_IDENTIFIER_STK_value(st, val) push_STK_value(X509_ALGO_IDENTIFIER, (st), (val))
#define find_X509_ALGO_IDENTIFIER_STK_value(st, val) find_STK_value(X509_ALGO_IDENTIFIER, (st), (val))
#define remove_X509_ALGO_IDENTIFIER_STK_value(st, i) remove_STK_value(X509_ALGO_IDENTIFIER, (st), (i))
#define insert_X509_ALGO_IDENTIFIER_STK_value(st, val, i) insert_STK_value(X509_ALGO_IDENTIFIER, (st), (val), (i))
#define dup_X509_ALGO_IDENTIFIER_STK(st) dup_STK(X509_ALGO_IDENTIFIER, st)
#define free_X509_ALGO_IDENTIFIER_STK_values(st, free_func) free_STK_values(X509_ALGO_IDENTIFIER, (st), (free_func))
#define pop_X509_ALGO_IDENTIFIER_STK_value(st) pop_STK_value(X509_ALGO_IDENTIFIER, (st))
#define sort_X509_ALGO_IDENTIFIER(st) sort_STK(X509_ALGO_IDENTIFIER, (st))
#define is_X509_ALGO_IDENTIFIER_STK_sorted(st) is_STK_sorted(X509_ALGO_IDENTIFIER, (st))

#define new_P7_SIGNER_INFO_STK() new_STK(P7_SIGNER_INFO)
#define free_P7_SIGNER_INFO_STK(st) free_STK(P7_SIGNER_INFO, (st))
#define get_P7_SIGNER_INFO_STK_count(st) get_STK_count(P7_SIGNER_INFO, (st))
#define get_P7_SIGNER_INFO_STK_value(st, i) get_STK_value(P7_SIGNER_INFO, (st), (i))
#define push_P7_SIGNER_INFO_STK_value(st, val) push_STK_value(P7_SIGNER_INFO, (st), (val))
#define find_P7_SIGNER_INFO_STK_value(st, val) find_STK_value(P7_SIGNER_INFO, (st), (val))
#define remove_P7_SIGNER_INFO_STK_value(st, i) remove_STK_value(P7_SIGNER_INFO, (st), (i))
#define insert_P7_SIGNER_INFO_STK_value(st, val, i) insert_STK_value(P7_SIGNER_INFO, (st), (val), (i))
#define dup_P7_SIGNER_INFO_STK(st) dup_STK(P7_SIGNER_INFO, st)
#define free_P7_SIGNER_INFO_STK_values(st, free_func) free_STK_values(P7_SIGNER_INFO, (st), (free_func))
#define pop_P7_SIGNER_INFO_STK_value(st) pop_STK_value(P7_SIGNER_INFO, (st))
#define sort_P7_SIGNER_INFO(st) sort_STK(P7_SIGNER_INFO, (st))
#define is_P7_SIGNER_INFO_STK_sorted(st) is_STK_sorted(P7_SIGNER_INFO, (st))

#define new_P7_RECIPIENT_INFO_STK() new_STK(P7_RECIPIENT_INFO)
#define free_P7_RECIPIENT_INFO_STK(st) free_STK(P7_RECIPIENT_INFO, (st))
#define get_P7_RECIPIENT_INFO_STK_count(st) get_STK_count(P7_RECIPIENT_INFO, (st))
#define get_P7_RECIPIENT_INFO_STK_value(st, i) get_STK_value(P7_RECIPIENT_INFO, (st), (i))
#define push_P7_RECIPIENT_INFO_STK_value(st, val) push_STK_value(P7_RECIPIENT_INFO, (st), (val))
#define find_P7_RECIPIENT_INFO_STK_value(st, val) find_STK_value(P7_RECIPIENT_INFO, (st), (val))
#define remove_P7_RECIPIENT_INFO_STK_value(st, i) remove_STK_value(P7_RECIPIENT_INFO, (st), (i))
#define insert_P7_RECIPIENT_INFO_STK_value(st, val, i) insert_STK_value(P7_RECIPIENT_INFO, (st), (val), (i))
#define dup_P7_RECIPIENT_INFO_STK(st) dup_STK(P7_RECIPIENT_INFO, st)
#define free_P7_RECIPIENT_INFO_STK_values(st, free_func) free_STK_values(P7_RECIPIENT_INFO, (st), (free_func))
#define pop_P7_RECIPIENT_INFO_STK_value(st) pop_STK_value(P7_RECIPIENT_INFO, (st))
#define sort_P7_RECIPIENT_INFO(st) sort_STK(P7_RECIPIENT_INFO, (st))
#define is_P7_RECIPIENT_INFO_STK_sorted(st) is_STK_sorted(P7_RECIPIENT_INFO, (st))

#define new_P7_CONTENT_INFO_STK() new_STK(P7_CONTENT_INFO)
#define free_P7_CONTENT_INFO_STK(st) free_STK(P7_CONTENT_INFO, (st))
#define get_P7_CONTENT_INFO_STK_count(st) get_STK_count(P7_CONTENT_INFO, (st))
#define get_P7_CONTENT_INFO_STK_value(st, i) get_STK_value(P7_CONTENT_INFO, (st), (i))
#define push_P7_CONTENT_INFO_STK_value(st, val) push_STK_value(P7_CONTENT_INFO, (st), (val))
#define find_P7_CONTENT_INFO_STK_value(st, val) find_STK_value(P7_CONTENT_INFO, (st), (val))
#define remove_P7_CONTENT_INFO_STK_value(st, i) remove_STK_value(P7_CONTENT_INFO, (st), (i))
#define insert_P7_CONTENT_INFO_STK_value(st, val, i) insert_STK_value(P7_CONTENT_INFO, (st), (val), (i))
#define dup_P7_CONTENT_INFO_STK(st) dup_STK(P7_CONTENT_INFO, st)
#define free_P7_CONTENT_INFO_STK_values(st, free_func) free_STK_values(P7_CONTENT_INFO, (st), (free_func))
#define pop_P7_CONTENT_INFO_STK_value(st) pop_STK_value(P7_CONTENT_INFO, (st))
#define sort_P7_CONTENT_INFO(st) sort_STK(P7_CONTENT_INFO, (st))
#define is_P7_CONTENT_INFO_STK_sorted(st) is_STK_sorted(P7_CONTENT_INFO, (st))

#define new_P8_PRIV_KEY_INFO_STK() new_STK(P8_PRIV_KEY_INFO)
#define free_P8_PRIV_KEY_INFO_STK(st) free_STK(P8_PRIV_KEY_INFO, (st))
#define get_P8_PRIV_KEY_INFO_STK_count(st) get_STK_count(P8_PRIV_KEY_INFO, (st))
#define get_P8_PRIV_KEY_INFO_STK_value(st, i) get_STK_value(P8_PRIV_KEY_INFO, (st), (i))
#define push_P8_PRIV_KEY_INFO_STK_value(st, val) push_STK_value(P8_PRIV_KEY_INFO, (st), (val))
#define find_P8_PRIV_KEY_INFO_STK_value(st, val) find_STK_value(P8_PRIV_KEY_INFO, (st), (val))
#define remove_P8_PRIV_KEY_INFO_STK_value(st, i) remove_STK_value(P8_PRIV_KEY_INFO, (st), (i))
#define insert_P8_PRIV_KEY_INFO_STK_value(st, val, i) insert_STK_value(P8_PRIV_KEY_INFO, (st), (val), (i))
#define dup_P8_PRIV_KEY_INFO_STK(st) dup_STK(P8_PRIV_KEY_INFO, st)
#define free_P8_PRIV_KEY_INFO_STK_values(st, free_func) free_STK_values(P8_PRIV_KEY_INFO, (st), (free_func))
#define pop_P8_PRIV_KEY_INFO_STK_value(st) pop_STK_value(P8_PRIV_KEY_INFO, (st))
#define sort_X509_PRIV(st) sort_STK(P8_PRIV_KEY_INFO, (st))
#define is_P8_PRIV_KEY_INFO_STK_sorted(st) is_STK_sorted(P8_PRIV_KEY_INFO, (st))

#define new_OCTET_STRING_STK() new_STK(OCTET_STRING)
#define free_OCTET_STRING_STK(st) free_STK(OCTET_STRING, (st))
#define get_OCTET_STRING_STK_count(st) get_STK_count(OCTET_STRING, (st))
#define get_OCTET_STRING_STK_value(st, i) get_STK_value(OCTET_STRING, (st), (i))
#define push_OCTET_STRING_STK_value(st, val) push_STK_value(OCTET_STRING, (st), (val))
#define find_OCTET_STRING_STK_value(st, val) find_STK_value(OCTET_STRING, (st), (val))
#define remove_OCTET_STRING_STK_value(st, i) remove_STK_value(OCTET_STRING, (st), (i))
#define insert_OCTET_STRING_STK_value(st, val, i) insert_STK_value(OCTET_STRING, (st), (val), (i))
#define dup_OCTET_STRING_STK(st) dup_STK(OCTET_STRING, st)
#define free_OCTET_STRING_STK_values(st, free_func) free_STK_values(OCTET_STRING, (st), (free_func))
#define pop_OCTET_STRING_STK_value(st) pop_STK_value(OCTET_STRING, (st))
#define sort_X509_OCTET_STRING(st) sort_STK(OCTET_STRING, (st))
#define is_OCTET_STRING_STK_sorted(st) is_STK_sorted(OCTET_STRING, (st))

#define new_CMS_SIGNER_INFO_STK() new_STK(CMS_SIGNER_INFO)
#define free_CMS_SIGNER_INFO_STK(st) free_STK(CMS_SIGNER_INFO, (st))
#define get_CMS_SIGNER_INFO_STK_count(st) get_STK_count(CMS_SIGNER_INFO, (st))
#define get_CMS_SIGNER_INFO_STK_value(st, i) get_STK_value(CMS_SIGNER_INFO, (st), (i))
#define push_CMS_SIGNER_INFO_STK_value(st, val) push_STK_value(CMS_SIGNER_INFO, (st), (val))
#define find_CMS_SIGNER_INFO_STK_value(st, val) find_STK_value(CMS_SIGNER_INFO, (st), (val))
#define remove_CMS_SIGNER_INFO_STK_value(st, i) remove_STK_value(CMS_SIGNER_INFO, (st), (i))
#define insert_CMS_SIGNER_INFO_STK_value(st, val, i) insert_STK_value(CMS_SIGNER_INFO, (st), (val), (i))
#define dup_CMS_SIGNER_INFO_STK(st) dup_STK(CMS_SIGNER_INFO, st)
#define free_CMS_SIGNER_INFO_STK_values(st, free_func) free_STK_values(CMS_SIGNER_INFO, (st), (free_func))
#define pop_CMS_SIGNER_INFO_STK_value(st) pop_STK_value(CMS_SIGNER_INFO, (st))
#define sort_CMS_SIGNER_INFO(st) sort_STK(CMS_SIGNER_INFO, (st))
#define is_CMS_SIGNER_INFO_STK_sorted(st) is_STK_sorted(CMS_SIGNER_INFO, (st))

#define new_CMS_RECIPIENT_INFO_STK() new_STK(CMS_RECIPIENT_INFO)
#define free_CMS_RECIPIENT_INFO_STK(st) free_STK(CMS_RECIPIENT_INFO, (st))
#define get_CMS_RECIPIENT_INFO_STK_count(st) get_STK_count(CMS_RECIPIENT_INFO, (st))
#define get_CMS_RECIPIENT_INFO_STK_value(st, i) get_STK_value(CMS_RECIPIENT_INFO, (st), (i))
#define push_CMS_RECIPIENT_INFO_STK_value(st, val) push_STK_value(CMS_RECIPIENT_INFO, (st), (val))
#define find_CMS_RECIPIENT_INFO_STK_value(st, val) find_STK_value(CMS_RECIPIENT_INFO, (st), (val))
#define remove_CMS_RECIPIENT_INFO_STK_value(st, i) remove_STK_value(CMS_RECIPIENT_INFO, (st), (i))
#define insert_CMS_RECIPIENT_INFO_STK_value(st, val, i) insert_STK_value(CMS_RECIPIENT_INFO, (st), (val), (i))
#define dup_CMS_RECIPIENT_INFO_STK(st) dup_STK(CMS_RECIPIENT_INFO, st)
#define free_CMS_RECIPIENT_INFO_STK_values(st, free_func) free_STK_values(CMS_RECIPIENT_INFO, (st), (free_func))
#define pop_CMS_RECIPIENT_INFO_STK_value(st) pop_STK_value(CMS_RECIPIENT_INFO, (st))
#define sort_CMS_RECIPIENT_INFO(st) sort_STK(CMS_RECIPIENT_INFO, (st))
#define is_CMS_RECIPIENT_INFO_STK_sorted(st) is_STK_sorted(CMS_RECIPIENT_INFO, (st))

#define new_CMS_RECIPIENT_ENCRYPTED_KEY_STK() new_STK(RECIPIENT_ENCRYPTED_KEY)
#define free_CMS_RECIPIENT_ENCRYPTED_KEY_STK(st) free_STK(RECIPIENT_ENCRYPTED_KEY, (st))
#define get_CMS_RECIPIENT_ENCRYPTED_KEY_STK_count(st) get_STK_count(RECIPIENT_ENCRYPTED_KEY, (st))
#define get_CMS_RECIPIENT_ENCRYPTED_KEY_STK_value(st, i) get_STK_value(RECIPIENT_ENCRYPTED_KEY, (st), (i))
#define push_CMS_RECIPIENT_ENCRYPTED_KEY_STK_value(st, val) push_STK_value(RECIPIENT_ENCRYPTED_KEY, (st), (val))
#define find_CMS_RECIPIENT_ENCRYPTED_KEY_STK_value(st, val) find_STK_value(RECIPIENT_ENCRYPTED_KEY, (st), (val))
#define remove_CMS_RECIPIENT_ENCRYPTED_KEY_STK_value(st, i) remove_STK_value(RECIPIENT_ENCRYPTED_KEY, (st), (i))
#define insert_CMS_RECIPIENT_ENCRYPTED_KEY_STK_value(st, val, i) insert_STK_value(RECIPIENT_ENCRYPTED_KEY, (st), (val), (i))
#define dup_CMS_RECIPIENT_ENCRYPTED_KEY_STK(st) dup_STK(RECIPIENT_ENCRYPTED_KEY, st)
#define free_CMS_RECIPIENT_ENCRYPTED_KEY_STK_values(st, free_func) free_STK_values(RECIPIENT_ENCRYPTED_KEY, (st), (free_func))
#define pop_CMS_RECIPIENT_ENCRYPTED_KEY_STK_value(st) pop_STK_value(RECIPIENT_ENCRYPTED_KEY, (st))
#define sort_CMS_RECIPIENT_ENCRYPTED_KEY_INFO(st) sort_STK(RECIPIENT_ENCRYPTED_KEY, (st))
#define is_CMS_RECIPIENT_ENCRYPTED_KEY_STK_sorted(st) is_STK_sorted(RECIPIENT_ENCRYPTED_KEY, (st))



#ifdef  __cplusplus
}
#endif

#endif
