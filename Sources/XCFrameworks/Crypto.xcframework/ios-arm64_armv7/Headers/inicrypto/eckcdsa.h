/*!
* \file eckcdsa.h
* \brief eckcdsa 헤더파일
* \author
* Copyright (c) 2008 by \<INITech\>
*/

#ifndef HEADER_ECKCDSA_H
#define HEADER_ECKCDSA_H


#include "biginteger.h"
#include "foundation.h"
#include "ecc.h"

#ifdef ISC_NO_ECKCDSA
#error ISC_ECKCDSA is disabled.
#endif

#define ISC_ECKCDSA_SIGN		1			/*!< ISC_ECKCDSA_SIGN*/
#define ISC_ECKCDSA_VERIFY		0			/*!< ISC_ECKCDSA_VERIFY*/

#define ISC_ECKCDSA_PROVEN_MODE	0    /*!<  0: 비검증 모드, 1: 검증모드 */

/*ISC_ECKCDSA Alias				0x60000000 ------------------------------------------------ */
#define ISC_ECKCDSA				0x60000000   /*!< ISC_ECKCDSA 알고리즘 ID */

#ifdef  __cplusplus
extern "C" {
#endif

/*!
* \brief
* ISC_ECKCDSA 알고리즘을 위한 구조체
*/
struct isc_eckcdsa_st	{
	ISC_DIGEST_UNIT *d_unit;		/*!< ISC_DIGEST_UNIT*/
	ISC_ECC_KEY_UNIT *key;			/*!< ISC_ECC_KEY_UNIT*/
	ISC_BIGINT *k;					/*!< 마지막에 사용한 랜덤 k값 */
	ISC_ECPOINT *kG;				/*!< 마지막에 사용한 랜덤 kG값 */
	ISC_BIGINT *kkey;				/*!< 벡터값. 사용하지 않는다. */
	int is_private;					/*!< Public : 0 , Private : 1*/
	ISC_BIGINT_POOL *pool;			/*!< 연산 효율을 위한 풀 */
};

#ifndef ISC_WIN_LOADLIBRARY_CRYPTO

/*!
* \brief
* ECKCDSA_UNIT 구조체의 메모리 할당
* \returns
* ISC_ECKCDSA_UNIT 구조체
*/
ISC_API ISC_ECKCDSA_UNIT* ISC_New_ECKCDSA(void);
/*!
* \brief
* ECKCDSA_UNIT 메모리 해제 함수
* \param unit
* 메모리 해제할 ISC_ECKCDSA_UNIT
*/
ISC_API void ISC_Free_ECKCDSA(ISC_ECKCDSA_UNIT* unit);
/*!
* \brief
* ISC_ECKCDSA_UNIT 메모리 초기화 함수
* \param unit
* 초기화 할 ISC_ECKCDSA_UNIT
*/
ISC_API void ISC_Clean_ECKCDSA(ISC_ECKCDSA_UNIT *unit);

/*!
* \brief
* ECKCDSA Parameter 설정
* \param eckcdsa
* Parameter가 입력될 ISC_ECKCDSA_UNIT
* \param field_id
* 커브 id값
* \param x
* 개인키 x
* \param y
* 공개키 y
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_L_ECKCDSA^ISC_F_SET_ECKCDSA_PARAMS_EX^ISC_ERR_NULL_INPUT : NULL값 입력
* -# ISC_L_ECKCDSA^ISC_F_SET_ECKCDSA_PARAMS_EX^ISC_ERR_MEM_ALLOC : 메모리 할당 실패
* -# LOCATION^ISC_F_SET_ECKCDSA_PARAMS_EX^ISC_ERR_SET_ECC_KEY_PARAMS_EX : 커브값 설정 실패
*/
ISC_API ISC_STATUS ISC_Set_ECKCDSA_Params(ISC_ECKCDSA_UNIT *unit, const int field_id, const ISC_BIGINT* x, const ISC_ECPOINT* y);

/*!
* \brief
* ECKCDSA Parameter 설정
* \param eckcdsa
* Parameter가 입력될 ISC_ECKCDSA_UNIT
* \param curve
* 커브값
* \param x
* 개인키 x
* \param y
* 공개키 y
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_L_ECKCDSA^ISC_F_SET_ECKCDSA_PARAMS^ISC_ERR_NULL_INPUT : NULL값 입력
* -# ISC_L_ECKCDSA^ISC_F_SET_ECKCDSA_PARAMS^ISC_ERR_MEM_ALLOC : 메모리 할당 실패
* -# LOCATION^ISC_F_SET_ECKCDSA_PARAMS^ISC_ERR_SUB_OPERATION_FAILURE : 커브값 설정 실패
* -# LOCATION^ISC_F_SET_ECKCDSA_PARAMS^ISC_ERR_COPY_BIGINT_FAIL : COPY BIGINT 실패
*/
ISC_API ISC_STATUS ISC_Set_ECKCDSA_Params_Ex(ISC_ECKCDSA_UNIT *unit, 
										  const ISC_ECURVE* curve, 
										  const ISC_BIGINT* x, 
										  const ISC_ECPOINT* y);



/*!
* \brief
* ECKCDSA 전자서명 알고리즘 초기화
* \param unit
* 초기화 될 ISC_ECKCDSA_UNIT
* \param digest_id
* 해시 아이디
* \param sign
* (ISC_ECKCDSA_SIGN)1 : 서명, (ISC_ECKCDSA_VERIFY)0 : 검증
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_Crypto_Initialize()의 에러코드
* -# ISC_L_ECKCDSA^ISC_F_INIT_ECKCDSA^ISC_ERR_NULL_INPUT : NULL값 입력
* -# ISC_L_ECKCDSA^ISC_F_INIT_ECKCDSA^ISC_ERR_MEM_ALLOC : 메모리 할당 실패
* -# ISC_L_ECKCDSA^ISC_F_INIT_ECKCDSA^ISC_ERR_NOT_SUPPORTED_CURVE_TYPE : 지워하지 않는 커브값 입력
* -# ISC_L_ECKCDSA^ISC_F_INIT_ECKCDSA^ISC_ERR_INIT_DIGEST_FAIL : INIT DIGEST 실패
* -# ISC_L_ECKCDSA^ISC_F_INIT_ECKCDSA^ISC_ERR_NEW_BIGINT_POOL_FAIL : NEW BIGINT POOL 실패
*/
ISC_API ISC_STATUS ISC_Init_ECKCDSA(ISC_ECKCDSA_UNIT *unit, int digest_id, int sign);

/*!
* \brief
* ISC_ECKCDSA 전자서명 메시지 입력(Update) 함수
* \param eckcdsa
* ISC_ECKCDSA_UNIT 구조체 포인터
* \param data
* 입력될 데이터(여러번 입력 가능)
* \param dataLen
* 데이터의 길이
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_Crypto_Initialize()의 에러코드
* -# ISC_L_ECKCDSA^ISC_F_UPDATE_ECKCDSA^ISC_ERR_NULL_INPUT : NULL 입력값 입력
* -# ISC_L_ECKCDSA^ISC_F_UPDATE_ECKCDSA^ISC_ERR_SUB_OPERATION_FAILURE : 내부함수 연산(lmb_ECKCDSA) 실패
* -# ISC_L_ECKCDSA^ISC_F_UPDATE_ECKCDSA^ISC_ERR_MEM_ALLOC : 동적 메모리 할당 실패
* -# ISC_L_ECKCDSA^ISC_F_UPDATE_ECKCDSA^ISC_ERR_SUB_OPERATION_FAILURE : 내부함수 BIGINT 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_UPDATE_ECKCDSA^ISC_ERR_UPDATE_DIGEST_FAIL : UPDATE DIGEST 연산 실패
*/
ISC_API ISC_STATUS ISC_Update_ECKCDSA(ISC_ECKCDSA_UNIT *unit, const uint8 *data, uint32 dataLen);

/*!
* \brief
* ECKCDSA 전자서명의 서명값 생성 / 검증 함수
* \param eckcdsa
* ISC_ECKCDSA_UNIT 구조체 포인터
* \param r
* 서명값 r
* \param rLen
* 서명값 r의 길이
* \param s
* 서명값 s
* \param sLen
* 서명값 s의 길이
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_Crypto_Initialize()의 에러코드
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_NULL_INPUT : NULL 입력값 입력
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_FINAL_DIGEST_FAIL : FINAL DIGEST 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_GET_BIGINT_POOL_FAIL : BIGINT POOL 실패
* -# LOCATION^ISC_F_SIGN_ECDSA^ISC_ERR_MEM_ALLOC : 동적 메모리 할당 실패
* -# LOCATION^ISC_F_SIGN_ECDSA^ISC_ERR_RAND_BIGINT_FAIL : RAND_BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_SUB_OPERATION_FAILURE : 내부함수 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_MOD_BIGINT_FAIL : MOD BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_MOD_EXP_MONT_BIGINT_FAIL : MOD EXP MONT BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECDSA^ISC_ERR_ADD_BIGINT_FAIL : ADD BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECDSA^ISC_ERR_ADD_FP_ECC : ADD FP ECC 실패
* -# LOCATION^ISC_F_SIGN_ECDSA^ISC_ERR_COPY_BIGINT_FAIL : COPY BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_INIT_DIGEST_FAIL : INIT DIGEST 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_UPDATE_DIGEST_FAIL : UPDATE DIGEST 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_FINAL_DIGEST_FAIL : FINAL DIGEST 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_BINARY_TO_BIGINT_FAIL : BINARY TO BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_SUB_BIGINT_FAIL : SUB BIGINT 실패
* -# LOCATION^ISC_F_SIGN_ECKCDSA^ISC_ERR_MOD_MTP_BIGINT_FAIL : MOD MTP BIGINT 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_NULL_INPUT : NULL 입력값 입력
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_FINAL_DIGEST_FAIL : FINAL DIGEST 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_COMPARE_FAIL : Compare 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_START_BIGINT_POOL_FAIL : START BIGINT POOL 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_GET_BIGINT_POOL_FAIL : GET BIGINT POOL 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_BINARY_TO_BIGINT_FAIL : BINARY TO BIGINT 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_IS_BIGINT_ZERO_FAIL : IS BIGINT ZERO 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_CMP_BIGINT_FAIL : CMP BIGINT 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_MTP_ECC_MONT_FAIL : MTP ECC MONT 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_MTP_ECC_FBC_FAIL : MTP ECC FBC 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_ADD_ECC_FAIL : ADD ECC 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_INIT_DIGEST_FAIL : INIT DIGEST 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_UPDATE_DIGEST_FAIL : UPDATE DIGEST 실패
* -# LOCATION^ISC_F_VERIFY_ECKCDSA^ISC_ERR_VERIFY_FAILURE : VERIFY 실패
*/
ISC_API ISC_STATUS ISC_Final_ECKCDSA(ISC_ECKCDSA_UNIT *unit, uint8 *r, int *rLen,  uint8 *s, int *sLen);

/*!
* \brief
* 공개키, 개인키 키쌍을 생성
* \param key
* ISC_ECC_KEY_UNIT 구조체 포인터로 curve값 세팅이 되었어야 한다. 성공 시 키쌍을 저장한다.
* -# ISC_SUCCESS : Success
* -# ISC_Crypto_Initialize()의 에러코드
* -# ISC_L_ECDH^ISC_F_GENERATE_ECKCDSA_KEY_PAIR^ISC_ERR_NULL_INPUT : NULL값 입력          
* -# ISC_L_ECDH^ISC_F_GENERATE_ECKCDSA_KEY_PAIR^ISC_ERR_GENERATE_KEY_PAIR : 키쌍 생성 실패
*/
ISC_API ISC_STATUS ISC_Generate_ECKCDSA_Key_Pair(ISC_ECKCDSA_UNIT *unit);

/*!
* \brief
* ISC_ECKCDSA 전자서명의 서명값 생성
* \param eckcdsa
* ISC_ECKCDSA_UNIT 구조체 포인터
* \param r
* 서명값 r
* \param rLen
* 서명값 r의 길이
* \param s
* 서명값 s
* \param sLen
* 서명값 s의 길이
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_NULL_INPUT : NULL 입력값 입력
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_FINAL_DIGEST_FAIL : FINAL DIGEST 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_GET_BIGINT_POOL_FAIL : BIGINT POOL 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_GET_RAND_FAIL : 랜덤 생성 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_MOD_EXP_MONT_BIGINT_FAIL : MOD EXP MONT BIGINT 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_INIT_DIGEST_FAIL : INIT DIGEST 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_UPDATE_DIGEST_FAIL : UPDATE DIGEST 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_BINARY_TO_BIGINT_FAIL : BINARY TO BIGINT 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_SUB_OPERATION_FAILURE : 내부함수 BIGINT 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_SIGN_ECKCDSA^ISC_ERR_SUB_BIGINT_FAIL : SUB BIGINT 연산 실패
*/
ISC_INTERNAL ISC_STATUS ISC_Sign_ECKCDSA(ISC_ECKCDSA_UNIT *unit, uint8 *r, int *rLen, uint8 *s, int *sLen);

/*!
* \brief
* ECKCDSA 전자서명의 서명값 검증
* \param eckcdsa
* ISC_ECKCDSA_UNIT 구조체 포인터
* \param r
* 서명값 r
* \param rLen
* 서명값 r의 길이
* \param s
* 서명값 s
* \param sLen
* 서명값 s의 길이
* \returns
* -# ISC_SUCCESS : Success
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_NULL_INPUT: NULL 입력값 입력
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_FINAL_DIGEST_FAIL : FINAL DIGEST 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_SUB_OPERATION_FAILURE : 내부함수 연산(BIGINT) 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_GET_BIGINT_POOL_FAIL : GET BIGINT POOL 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_BINARY_TO_BIGINT_FAIL : BINARY TO BIGINT 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_IS_BIGINT_ZERO_FAIL : BIGINT의 사이즈가 ZERO
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_CMP_BIGINT_FAIL : Cmp BIGINT 연산  실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_MOD_EXP_MONT_BIGINT_FAIL : Mod Exp MONT BIGINT 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_INIT_DIGEST_FAIL : INIT DIGEST 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_UPDATE_DIGEST_FAIL : UPDATE DIGEST 연산 실패
* -# ISC_L_ECKCDSA^ISC_F_VERIFY_ECKCDSA^ISC_ERR_VERIFY_FAILURE : 서명검증 실패
*/
ISC_INTERNAL ISC_STATUS ISC_Verify_ECKCDSA(ISC_ECKCDSA_UNIT *unit, uint8 *r, int *rLen, uint8 *s, int *sLen);

#else

ISC_RET_LOADLIB_CRYPTO(ISC_ECKCDSA_UNIT*, ISC_New_ECKCDSA, (void), (), NULL );
ISC_VOID_LOADLIB_CRYPTO(void, ISC_Free_ECKCDSA, (ISC_ECKCDSA_UNIT* unit), (unit) );
ISC_VOID_LOADLIB_CRYPTO(void, ISC_Clean_ECKCDSA, (ISC_ECKCDSA_UNIT* unit), (unit) );
ISC_RET_LOADLIB_CRYPTO(ISC_STATUS, ISC_Set_ECKCDSA_Params, (ISC_ECKCDSA_UNIT *unit, const int field_id, const ISC_BIGINT* x, const ISC_ECPOINT* y), (unit,field_id,x,y), ISC_ERR_GET_ADRESS_LOADLIBRARY );
ISC_RET_LOADLIB_CRYPTO(ISC_STATUS, ISC_Set_ECKCDSA_Params_Ex, (ISC_ECKCDSA_UNIT *unit,const ISC_ECURVE* curve,const ISC_BIGINT* x,const ISC_ECPOINT* y), (unit,curve,x,y), ISC_ERR_GET_ADRESS_LOADLIBRARY );
ISC_RET_LOADLIB_CRYPTO(ISC_STATUS, ISC_Init_ECKCDSA, (ISC_ECKCDSA_UNIT *unit,int digest_id,int sign), (unit,digest_id,sign), ISC_ERR_GET_ADRESS_LOADLIBRARY );
ISC_RET_LOADLIB_CRYPTO(ISC_STATUS, ISC_Update_ECKCDSA, (ISC_ECKCDSA_UNIT *unit, const uint8 *data, uint32 dataLen), (unit, data, dataLen), ISC_ERR_GET_ADRESS_LOADLIBRARY );
ISC_RET_LOADLIB_CRYPTO(ISC_STATUS, ISC_Final_ECKCDSA, (ISC_ECKCDSA_UNIT *unit, uint8 *r, int *rLen,  uint8 *s, int *sLen), (unit, r, rLen, s, sLen), ISC_ERR_GET_ADRESS_LOADLIBRARY );
ISC_RET_LOADLIB_CRYPTO(ISC_STATUS, ISC_Generate_ECKCDSA_Key_Pair, (ISC_ECKCDSA_UNIT *unit), (unit), ISC_ERR_GET_ADRESS_LOADLIBRARY);

#endif

#ifdef  __cplusplus
}
#endif

#endif


